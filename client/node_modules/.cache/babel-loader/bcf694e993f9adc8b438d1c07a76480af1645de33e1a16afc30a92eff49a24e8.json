{"ast":null,"code":"var _jsxFileName = \"/Users/Michele/Documents/PROGRAMMING/CDD APP/client/src/component/ConfigurationForm.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport yaml from \"js-yaml\";\nimport { useEffect, useState } from \"react\";\nimport { getConfByName } from \"../api/confsApis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConfigurationForm = () => {\n  _s();\n  console.log(\"sd\");\n  const {\n    name\n  } = useParams();\n  const [conf, setConf] = useState({\n    err: null,\n    data: null\n  });\n  const getConf = async () => {\n    let res;\n    try {\n      res = await getConfByName(name);\n    } catch (err) {\n      setConf({\n        err: `Error while retrieve conf with name ${name}`\n      });\n      return;\n    }\n    console.log(`Conf received by backend`, res.data);\n    setConf({\n      data: yaml.load(res.data)\n    });\n  };\n  console.log(conf);\n  useEffect(() => {\n    getConf();\n  }, []);\n  if (!conf.err && !conf.data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading form...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (conf.err) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: conf.err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), conf.data.steps.map(s => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: s.name,\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          step: s\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), s.required ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 27\n        }, this) : null]\n      }, s.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"50px\"\n      },\n      children: \"* Required Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigurationForm, \"foO2k23aNbAMKJZVfoZTDYaEjtQ=\", false, function () {\n  return [useParams];\n});\n_c = ConfigurationForm;\nconst FormInputWrapper = ({\n  step\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: s.name,\n      children: s.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      step: s\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), s.required ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this) : null]\n  }, s.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FormInputWrapper;\nconst FormInput = ({\n  step\n}) => {\n  console.log(step);\n  switch (step.selectionRule) {\n    case \"EXACTLY_ONE\":\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        name: step.name,\n        children: step.values.map(v => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: v.value,\n            children: v.description\n          }, v.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, step.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    case \"BOOLEAN\":\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: step.name,\n        value: 1\n      }, step.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    case \"AT_LEAST_ONE_COMPLEX\":\n      return step.steps.map(s => {\n        return /*#__PURE__*/_jsxDEV(FormInput, {\n          step: s\n        }, s.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n      });\n  }\n};\n_c3 = FormInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ConfigurationForm\");\n$RefreshReg$(_c2, \"FormInputWrapper\");\n$RefreshReg$(_c3, \"FormInput\");","map":{"version":3,"names":["useParams","yaml","useEffect","useState","getConfByName","jsxDEV","_jsxDEV","ConfigurationForm","_s","console","log","name","conf","setConf","err","data","getConf","res","load","children","fileName","_jsxFileName","lineNumber","columnNumber","steps","map","s","htmlFor","FormInput","step","required","style","color","marginTop","_c","FormInputWrapper","_c2","selectionRule","values","v","value","description","type","_c3","$RefreshReg$"],"sources":["/Users/Michele/Documents/PROGRAMMING/CDD APP/client/src/component/ConfigurationForm.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport yaml from \"js-yaml\";\nimport { useEffect, useState } from \"react\";\nimport { getConfByName } from \"../api/confsApis\";\n\nexport const ConfigurationForm = () => {\n  console.log(\"sd\");\n  const { name } = useParams();\n\n  const [conf, setConf] = useState({ err: null, data: null });\n\n  const getConf = async () => {\n    let res;\n    try {\n      res = await getConfByName(name);\n    } catch (err) {\n      setConf({ err: `Error while retrieve conf with name ${name}` });\n      return;\n    }\n    console.log(`Conf received by backend`, res.data);\n    setConf({ data: yaml.load(res.data) });\n  };\n\n  console.log(conf);\n\n  useEffect(() => {\n    getConf();\n  }, []);\n\n  if (!conf.err && !conf.data) {\n    return <p>Loading form...</p>;\n  }\n\n  if (conf.err) {\n    return <p>{conf.err}</p>;\n  }\n\n  return (\n    <form>\n      <h3>{name}</h3>\n      {conf.data.steps.map((s) => {\n        return (\n          <li key={s.name}>\n            <label htmlFor={s.name}>{s.name}</label>\n            <FormInput step={s} />\n            {s.required ? <span style={{ color: \"red\" }}>*</span> : null}\n          </li>\n        );\n      })}\n      <p style={{ color: \"red\", marginTop: \"50px\" }}>* Required Field</p>\n    </form>\n  );\n};\n\nconst FormInputWrapper = ({ step }) => {\n  return (\n    <li key={s.name}>\n      <label htmlFor={s.name}>{s.name}</label>\n      <FormInput step={s} />\n      {s.required ? <span style={{ color: \"red\" }}>*</span> : null}\n    </li>\n  );\n};\n\nconst FormInput = ({ step }) => {\n  console.log(step);\n  switch (step.selectionRule) {\n    case \"EXACTLY_ONE\":\n      return (\n        <select name={step.name} key={step.name}>\n          {step.values.map((v) => {\n            return (\n              <option key={v.value} value={v.value}>\n                {v.description}\n              </option>\n            );\n          })}\n        </select>\n      );\n    case \"BOOLEAN\":\n      return (\n        <input key={step.name} type=\"checkbox\" name={step.name} value={1} />\n      );\n    case \"AT_LEAST_ONE_COMPLEX\":\n      return step.steps.map((s) => {\n        return <FormInput key={s.name} step={s} />;\n      });\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}