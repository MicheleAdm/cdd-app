{"ast":null,"code":"var _jsxFileName = \"/Users/Michele/Documents/PROGRAMMING/CDD APP/client/src/component/ConfigurationForm.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport yaml from \"js-yaml\";\nimport { useEffect, useState } from \"react\";\nimport { getConfByName } from \"../api/confsApis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConfigurationForm = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [conf, setConf] = useState({\n    err: null,\n    data: null\n  });\n  const getConf = async () => {\n    let res;\n    try {\n      res = await getConfByName(name);\n    } catch (err) {\n      setConf({\n        err: `Error while retrieve conf with name ${name}`\n      });\n      return;\n    }\n    console.log(`Conf received by backend`, res.data);\n    setConf({\n      data: yaml.load(res.data)\n    });\n  };\n  console.log(conf);\n  useEffect(() => {\n    getConf();\n  }, []);\n  if (!conf.err && !conf.data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading form...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (conf.err) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: conf.err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [conf.data.steps.map(s => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: s.name,\n          children: [s.name, \" \", s.required ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          step: s\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, s.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"* Required Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigurationForm, \"foO2k23aNbAMKJZVfoZTDYaEjtQ=\", false, function () {\n  return [useParams];\n});\n_c = ConfigurationForm;\nconst FormInput = ({\n  step\n}) => {\n  switch (step.selectionRule) {\n    case \"EXACTLY_ONE\":\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        name: step.name,\n        children: step.values.map(v => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: v.value,\n            children: v.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 20\n          }, this);\n        })\n      }, step.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    case \"BOOLEAN\":\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: step.name,\n        value: 1\n      }, step.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n  }\n};\n_c2 = FormInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConfigurationForm\");\n$RefreshReg$(_c2, \"FormInput\");","map":{"version":3,"names":["useParams","yaml","useEffect","useState","getConfByName","jsxDEV","_jsxDEV","ConfigurationForm","_s","name","conf","setConf","err","data","getConf","res","console","log","load","children","fileName","_jsxFileName","lineNumber","columnNumber","steps","map","s","htmlFor","required","style","color","FormInput","step","_c","selectionRule","values","v","value","description","type","_c2","$RefreshReg$"],"sources":["/Users/Michele/Documents/PROGRAMMING/CDD APP/client/src/component/ConfigurationForm.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport yaml from \"js-yaml\";\nimport { useEffect, useState } from \"react\";\nimport { getConfByName } from \"../api/confsApis\";\n\nexport const ConfigurationForm = () => {\n  const { name } = useParams();\n\n  const [conf, setConf] = useState({ err: null, data: null });\n\n  const getConf = async () => {\n    let res;\n    try {\n      res = await getConfByName(name);\n    } catch (err) {\n      setConf({ err: `Error while retrieve conf with name ${name}` });\n      return;\n    }\n    console.log(`Conf received by backend`, res.data);\n    setConf({ data: yaml.load(res.data) });\n  };\n\n  console.log(conf);\n\n  useEffect(() => {\n    getConf();\n  }, []);\n\n  if (!conf.err && !conf.data) {\n    return <p>Loading form...</p>;\n  }\n\n  if (conf.err) {\n    return <p>{conf.err}</p>;\n  }\n\n  return (\n    <form>\n      {conf.data.steps.map((s) => {\n        return (\n          <div key={s.name}>\n            <label htmlFor={s.name}>\n              {s.name}{\" \"}\n              {s.required ? <span style={{ color: \"red\" }}></span> : null}\n            </label>\n            <FormInput step={s} />\n          </div>\n        );\n      })}\n      <p style={{ color: \"red\" }}>* Required Field</p>\n    </form>\n  );\n};\n\nconst FormInput = ({ step }) => {\n  switch (step.selectionRule) {\n    case \"EXACTLY_ONE\":\n      return (\n        <select name={step.name} key={step.name}>\n          {step.values.map((v) => {\n            return <option value={v.value}>{v.description}</option>;\n          })}\n        </select>\n      );\n    case \"BOOLEAN\":\n      return (\n        <input key={step.name} type=\"checkbox\" name={step.name} value={1} />\n      );\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}